from dataclasses import dataclass

from data_preprocessing.data_preprocessor_builder import DataPreprocessorBuilder


def main():
    datasets_folder_path = '../datasets/'
    data: list[Data] = [
        Data(data_name='Naticusdroid', file_path=datasets_folder_path + 'naticusdroid+android+permissions+dataset.csv',
             result_col_name='Label'),
        Data(data_name='Android_Malware_Benign', result_col_name='Label',
             file_path=datasets_folder_path + 'Android_Malware_Benign.csv')
    ]

    columns_to_filter = [
        "Label",
        "SUM_OF_PERMITTED_PERMISSIONS",
        "GET_ACCOUNTS",
        "READ_EXTERNAL_STORAGE",
        "WRITE_SETTINGS",
        "GET_TASKS",
        "WRITE_EXTERNAL_STORAGE",
        "READ_PHONE_STATE",
        "ACCESS_WIFI_STATE",
        "SYSTEM_ALERT_WINDOW",
        "READ_CONTACTS",
        "RECEIVE_BOOT_COMPLETED",
        "WAKE_LOCK",
        "CAMERA",
        "VIBRATE",
    ]

    for d in data:
        DataPreprocessorBuilder(data_name=d.data_name, result_col_name=d.result_col_name) \
            .load_data(d.file_path) \
            .add_sum_of_permitted_permissions() \
            .normalize_label() \
            .remove_unbalanced_columns(threshold=0.90) \
            .normalize_data() \
            .cut_names_from_all_columns() \
            .filter_columns(columns_to_filter) \
            .show_basic_statistics() \
            .build(folder_path='../processed_data')


@dataclass
class Data:
    data_name: str
    file_path: str
    result_col_name: str


if __name__ == '__main__':
    main()
