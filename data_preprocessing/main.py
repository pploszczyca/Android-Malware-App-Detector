import argparse
import logging

from data_preprocessing.group_permission_strategy import GroupPermissionStrategy
from data_preprocessing.one_permission_per_feature_strategy import OnePermissionPerFeatureStrategy
from data_preprocessing.preprocessing_strategy import PreprocessingStrategy, Data
from data_preprocessing.data_splitter_saver import DataSplitterSaver


def main(strategy_name: str, data_splitter_stats: bool):
    logging.basicConfig(level=logging.INFO,
                        format='%(asctime)s - %(name)s - %(levelname)s - %(data_name)s - %(message)s')
    datasets_folder_path = 'datasets/'
    data: list[Data] = [
        Data(data_name='Naticusdroid', file_path=datasets_folder_path + 'naticusdroid+android+permissions+dataset.csv',
             result_col_name='Label'),
        Data(data_name='Android_Malware_Benign', result_col_name='Label',
             file_path=datasets_folder_path + 'Android_Malware_Benign.csv')
    ]

    strategies = {
        'OnePermissionPerFeature': OnePermissionPerFeatureStrategy,
        'GroupPermission': GroupPermissionStrategy
    }
    strategy: PreprocessingStrategy = strategies[strategy_name]()

    results = strategy.preprocess(data)
    DataSplitterSaver(data_list=results).process_and_save(folder_path=f'processed_data/{strategy_name}',
                                                          should_show_statistics=data_splitter_stats)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Run data preprocessing with a specified strategy.')
    parser.add_argument('strategy', type=str, help='The name of the preprocessing strategy to use.')
    parser.add_argument('--data-splitter-stats', action='store_true', help='Whether to show basic statistics of the data splitter.')
    args = parser.parse_args()
    main(args.strategy, args.data_splitter_stats)
