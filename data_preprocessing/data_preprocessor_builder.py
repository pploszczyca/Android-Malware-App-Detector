import logging

import pandas as pd


class DataPreprocessorBuilder:
    def __init__(self, data_name='general'):
        self.data = None
        logging.basicConfig(level=logging.INFO,
                            format='%(asctime)s - %(name)s - %(levelname)s - %(data_name)s - %(message)s')
        self.logger = logging.getLogger(__name__)
        self.data_name = data_name

    def load_data(self, file_path: str) -> 'DataPreprocessorBuilder':
        self.data = pd.read_csv(file_path)
        self.logger.info("Data loaded successfully.", extra={'data_name': self.data_name})
        return self

    def show_basic_statistics(self) -> 'DataPreprocessorBuilder':
        self.__require_data()

        self.logger.info("Basic statistics of the data:", extra={'data_name': self.data_name})
        for stat in self.data.describe():
            self.logger.info(f"{stat}: {self.data[stat].describe()}", extra={'data_name': self.data_name})

        return self

    def __require_data(self):
        if self.data is None:
            raise ValueError("Data has not been loaded yet.")

    def build(self):
        return self.data
