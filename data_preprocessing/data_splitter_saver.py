import pandas as pd
from sklearn.model_selection import train_test_split
import os


class DataSplitterSaver:
    def __init__(self, data_list: list[pd.DataFrame], test_size=0.2, val_size=0.0001, random_state=42):
        self.data = pd.concat(data_list)
        self.test_size = test_size
        self.val_size = val_size
        self.random_state = random_state

    def process_and_save(self, folder_path):
        self.__remove_duplicates()
        train_data, val_data, test_data = self.__split_data()
        self.__save_data(train_data, val_data, test_data, folder_path)

    def __remove_duplicates(self):
        self.data.drop_duplicates(inplace=True)

    def __split_data(self):
        train_data, test_data = train_test_split(self.data, test_size=self.test_size, random_state=self.random_state)
        train_data, val_data = train_test_split(train_data, test_size=self.val_size, random_state=self.random_state)

        return train_data, val_data, test_data

    @staticmethod
    def __save_data(train_data, val_data, test_data, folder_path):
        if not os.path.exists(folder_path):
            os.makedirs(folder_path)

        train_data.to_csv(os.path.join(folder_path, 'train.csv'), index=False)
        val_data.to_csv(os.path.join(folder_path, 'val.csv'), index=False)
        test_data.to_csv(os.path.join(folder_path, 'test.csv'), index=False)
